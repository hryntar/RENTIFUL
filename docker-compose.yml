version: '3.8'

services:
  # Database
  postgres:
    image: postgis/postgis:15-3.3
    container_name: rentiful-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: Rentiful
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: admin
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db:/docker-entrypoint-initdb.d
    networks:
      - rentiful-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d Rentiful"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend Server
  server:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: rentiful-server
    restart: unless-stopped
    environment:
      DATABASE_URL: "postgresql://postgres:admin@postgres:5432/Rentiful?schema=public"
      PORT: 3001
      NODE_ENV: production
    ports:
      - "3001:3001"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - rentiful-network
    volumes:
      - ./server/.env:/app/.env:ro

  # Frontend Client
  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    container_name: rentiful-client
    restart: unless-stopped
    environment:
      NEXT_PUBLIC_API_BASE_URL: http://localhost:3001
      NODE_ENV: production
    ports:
      - "3000:3000"
    depends_on:
      - server
    networks:
      - rentiful-network

  # pgAdmin for database management
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: rentiful-pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@rentiful.com
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "5050:80"
    depends_on:
      - postgres
    networks:
      - rentiful-network

volumes:
  postgres_data:
    driver: local

networks:
  rentiful-network:
    driver: bridge